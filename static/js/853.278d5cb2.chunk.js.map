{"version":3,"file":"static/js/853.278d5cb2.chunk.js","mappings":"+OAIMA,GAAaC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,yPAeHE,EAAW,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,GAAIC,EAAe,EAAfA,SAC7B,OACE,UAACL,EAAD,CAAYI,GAAIA,EAAhB,WACE,SAAC,MAAD,CAAmBE,KAAK,OACvBD,IAGN,E,2BCzBD,GAAgB,MAAQ,gCAAgC,SAAW,mCAAmC,WAAa,qCAAqC,MAAQ,gCAAgC,OAAS,iCAAiC,cAAgB,wCAAwC,YAAc,sCAAsC,OAAS,iCAAiC,SAAW,mCAAmC,WAAa,sCCmD3b,EA9CqB,WAAO,IAAD,MACfE,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAA0BE,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAEMC,EAAY,qBADDC,EAAAA,EAAAA,MACaC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,UACvCC,EAAYN,EAAMO,YAAN,yCAAsDP,EAAMO,aAAgB,kEACxFC,EAAcR,EAAMS,aAAN,UAAqBT,EAAMS,oBAA3B,aAAqB,EAAoBC,MAAM,KAAK,GAAK,UAM7E,OAJAC,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,IAAgBf,GAAIgB,MAAK,SAAAC,GAAQ,OAAIb,EAASa,EAAb,GACpC,GAAE,CAACjB,KAGA,0BACCG,IACD,4BACC,SAACP,EAAD,CAAUC,GAAIQ,EAAd,6BACC,iBAAKa,UAAWC,EAAAA,MAAhB,WACE,gBAAKD,UAAWC,EAAAA,SAAhB,UACE,gBAAKC,IAAKX,EAAWY,IAAI,GAAGH,UAAWC,EAAAA,WAEzC,iBAAKD,UAAWC,EAAAA,iBAAhB,WACA,iBAAKD,UAAWC,EAAAA,WAAhB,WACA,gBAAID,UAAWC,EAAAA,MAAf,UAA2BhB,EAAMmB,eAAjC,KAAmDX,EAAnD,QACA,eAAGO,UAAWC,EAAAA,OAAd,yBAAuCI,KAAKC,MAA2B,GAArBrB,EAAMsB,cAAxD,WAEE,eAAIP,UAAWC,EAAAA,cAAf,wBACA,cAAGD,UAAWC,EAAAA,SAAd,SAA6BhB,EAAMuB,YACnC,eAAIR,UAAWC,EAAAA,YAAf,sBACA,uBAAIhB,EAAMwB,OAAOC,KAAI,SAAAD,GAAM,OACzB,iBAAMT,UAAWC,EAAAA,OAAjB,SAAgDQ,EAAOE,MAArBF,EAAOE,KADhB,OAGzB,iBAAKX,UAAWC,EAAAA,WAAhB,qCACI,2BACI,kCACA,oDASvB,C,8IChDKW,EAAU,mCACVC,EAAa,4CACbC,EAAe,kDACfC,EAAe,sCAEd,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAmCC,GAAnC,kGAEoBC,EAAAA,EAAAA,IAAA,UAClBJ,EADkB,oBACMF,EADN,iBACsBK,IAH1C,uBAEKE,EAFL,EAEKA,KAFL,kBAKQA,GALR,gCAOHC,QAAQC,IAAR,MAPG,gFAWA,SAAeC,EAAtB,iDAAO,OAAP,oBAAO,WAA2BC,EAAON,GAAlC,kGAEoBC,EAAAA,EAAAA,IAAA,UAClBL,EADkB,oBACID,EADJ,kBACqBW,EADrB,iBACmCN,EADnC,wCAFpB,uBAEKE,EAFL,EAEKA,KAFL,kBAKQA,EAAKK,SALb,gCAOHJ,QAAQC,IAAR,MAPG,gFAWA,SAAexB,EAAtB,+CAAO,OAAP,oBAAO,WAA+Bf,GAA/B,kGAEoBoC,EAAAA,EAAAA,IAAA,UAClBH,GADkB,OACHjC,EADG,oBACW8B,EADX,8CAFpB,uBAEKO,EAFL,EAEKA,KAFL,kBAKQA,GALR,gCAOHC,QAAQC,IAAR,MAPG,gF","sources":["components/BackLink/BackLink.jsx","webpack://goit-react-hw-05-movies/./src/pages/MovieDetails/MovieDetailsPage.module.css?879c","pages/MovieDetails/MovieDetailsPage.jsx","shared/api/movies.js"],"sourcesContent":["import { BsArrowLeftCircle } from \"react-icons/bs\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst StyledLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  padding: 8px 0;\n  color: black;\n  text-decoration: none;\n  font-weight: 700;\n  text-transform: uppercase;\n\n  :hover {\n    color: rgb(87, 123, 190);\n  }\n`;\n\nexport const BackLink = ({ to, children }) => {\n  return (\n    <StyledLink to={to}>\n      <BsArrowLeftCircle size=\"24\" />\n      {children}\n    </StyledLink>\n  );\n};","// extracted by mini-css-extract-plugin\nexport default {\"movie\":\"MovieDetailsPage_movie__Q92Ml\",\"imgBlock\":\"MovieDetailsPage_imgBlock__hAB-q\",\"titleBlock\":\"MovieDetailsPage_titleBlock__fl41w\",\"title\":\"MovieDetailsPage_title__zUK-B\",\"rating\":\"MovieDetailsPage_rating__gmwq2\",\"overviewTitle\":\"MovieDetailsPage_overviewTitle__h1tfn\",\"genresTitle\":\"MovieDetailsPage_genresTitle__GA1jW\",\"genres\":\"MovieDetailsPage_genres__3Y0VY\",\"overview\":\"MovieDetailsPage_overview__CUwCl\",\"additional\":\"MovieDetailsPage_additional__-ab+1\"};","import { BackLink } from \"components/BackLink/BackLink\";\nimport { useEffect, useState  } from \"react\";\nimport { useLocation, useParams } from \"react-router-dom\";\nimport { fetchMoviesByID } from \"shared/api/movies\";\nimport css from './MovieDetailsPage.module.css';\n\nconst MovieDetails = () => {\n    const { id } = useParams();\n    const [movie, setMovie] = useState('');\n    const location = useLocation();\n    const backLinkHref = location.state?.from ?? \"/movies\";\n    const imagePath = movie.poster_path ? `https://image.tmdb.org/t/p/w500${movie.poster_path}` : 'https://image.tmdb.org/t/p/w500/h5oGodvcoq8cyIDTy79yKn4qbey.jpg';\n    const releaseDate = movie.release_date ? movie.release_date?.split('-')[0] : 'No data';\n\n    useEffect(() => {\n        fetchMoviesByID(id).then(response => setMovie(response));\n    }, [id]);\n\n    return (\n        <main>\n        {movie && (\n        <div>\n         <BackLink to={backLinkHref}>Back to Movies</BackLink>\n          <div className={css.movie}>\n            <div className={css.imgBlock}>\n              <img src={imagePath} alt=\"\" className={css.image}/>\n            </div>\n            <div className={css.descriptionBlock}>\n            <div className={css.titleBlock}>\n            <h1 className={css.title}>{movie.original_title} ({releaseDate})</h1>\n            <p className={css.rating}>User Score: {Math.round(movie.vote_average * 10)}%</p>\n            </div>\n              <h2 className={css.overviewTitle}>Overview:</h2>\n              <p className={css.overview}>{movie.overview}</p>\n              <h2 className={css.genresTitle}>Genres:</h2>\n              <p>{movie.genres.map(genres => (\n                <span className={css.genres} key={genres.name}>{genres.name}</span>))}\n                </p>\n                <div className={css.additional}> Additional information\n                    <ul>\n                        <li>Cast</li>\n                        <li>Reviews</li>\n                    </ul>\n                </div>\n            </div>\n            </div>\n        </div>\n      )}\n        </main>\n    )\n};\n\nexport default MovieDetails;","import axios from \"axios\";\n\nconst API_KEY = '28318b77967fcb148715c1c7fa524b54';\nconst SEARCH_URL = 'https://api.themoviedb.org/3/search/movie';\nconst TRENDING_URL = 'https://api.themoviedb.org/3/trending/movie/day';\nconst MOVIE_ID_URL = 'https://api.themoviedb.org/3/movie/';\n\nexport async function fetchTrendingMovies(page) {\n  try {\n    const { data } = await axios.get(\n      `${TRENDING_URL}?api_key=${API_KEY}&page=${page}`\n    );\n        return data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function fetchMovies(query, page) {\n  try {\n    const { data } = await axios.get(\n      `${SEARCH_URL}?api_key=${API_KEY}&query=${query}&page=${page}&language=en-US&include_adult=false`\n    );\n        return data.results;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function fetchMoviesByID(id) {\n  try {\n    const { data } = await axios.get(\n      `${MOVIE_ID_URL}${id}?api_key=${API_KEY}&language=en-US&append_to_response=videos`\n    );\n        return data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function fetchTrailer(id) {\n  try {\n    const { data } = await axios.get(\n      `${MOVIE_ID_URL}${id}/videos?api_key=${API_KEY}&language=en-US`\n    );\n        return data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function fetchReviews(id) {\n    try {\n    const { data } = await axios.get(\n      `${MOVIE_ID_URL}${id}/review?api_key=${API_KEY}&language=en-US`\n        );\n        return data;\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport async function fetchCast(id) {\n    try {\n    const { data } = await axios.get(\n      `${MOVIE_ID_URL}${id}/credit?api_key=${API_KEY}&language=en-US`\n        );\n        return data;\n    } catch (error) {\n        console.log(error);\n    }\n}"],"names":["StyledLink","styled","Link","BackLink","to","children","size","id","useParams","useState","movie","setMovie","backLinkHref","useLocation","state","from","imagePath","poster_path","releaseDate","release_date","split","useEffect","fetchMoviesByID","then","response","className","css","src","alt","original_title","Math","round","vote_average","overview","genres","map","name","API_KEY","SEARCH_URL","TRENDING_URL","MOVIE_ID_URL","fetchTrendingMovies","page","axios","data","console","log","fetchMovies","query","results"],"sourceRoot":""}