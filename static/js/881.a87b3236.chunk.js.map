{"version":3,"file":"static/js/881.a87b3236.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/shared/Loader/Loader.module.css?8f3a","shared/Loader/Loader.jsx","webpack://goit-react-hw-05-movies/./src/components/SearchForm/SearchForm.module.css?d6f1","components/SearchForm/SearchForm.jsx","webpack://goit-react-hw-05-movies/./src/pages/Movies/MoviesPage.module.css?251f","pages/Movies/MoviesPage.jsx","shared/api/movies.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"backdrop\":\"Loader_backdrop__9D+In\"};","import { RotatingLines } from 'react-loader-spinner';\nimport css from './Loader.module.css';\n\nexport function Loader() {\n    return (\n        <div className={css.backdrop}>\n            <RotatingLines\n                strokeColor=\"grey\"\n                strokeWidth=\"5\"\n                animationDuration=\"0.75\"\n                width=\"96\"\n                visible={true}\n            />\n        </div>\n    )\n}","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"SearchForm_form__o80os\",\"input\":\"SearchForm_input__HOxJo\",\"searchBtn\":\"SearchForm_searchBtn__rp2a7\",\"search\":\"SearchForm_search__N-xkz\"};","import { HiSearch } from 'react-icons/hi';\nimport { Notify } from 'notiflix';\nimport css from './SearchForm.module.css';\nimport { useState } from \"react\";\n\nfunction SearchForm({onSubmit}) {\n    const [query, setQuery] = useState('');\n\n    const handleChange = event => {\n        const { value } = event.currentTarget;\n        setQuery(value);\n    }\n    \n    const handleSubmit = event => {\n        event.preventDefault();\n\n        if (query.trim() === '') {\n            Notify.failure('Enter your search request, please!');\n            return;\n        }\n        onSubmit(query);\n        setQuery('');\n    }\n\n        return (\n            <form className={css.form} onSubmit={handleSubmit}>\n                <input\n                    className={css.input}\n                    name=\"query\"\n                    type=\"text\"\n                    autoComplete=\"off\"\n                    autoFocus\n                    placeholder=\"Enter movie title\"\n                    onChange={handleChange}\n                    value={query}\n                    />\n                    \n                <button type=\"submit\" className={css.searchBtn}>\n                    <span className={css.searchLabel}> <HiSearch size={40} className={css.search} /></span>\n                </button>\n            </form>\n        )\n}\n\nexport default SearchForm;","// extracted by mini-css-extract-plugin\nexport default {\"movie\":\"MoviesPage_movie__BajZk\"};","import { useState, useEffect } from \"react\";\nimport { fetchMovies } from \"shared/api/movies\";\nimport { useLocation, useSearchParams, Link } from \"react-router-dom\";\nimport { Loader } from \"shared/Loader/Loader\";\nimport SearchForm from \"components/SearchForm/SearchForm\";\nimport { Notify } from 'notiflix';\nimport css from './MoviesPage.module.css';\n\nconst MoviesPage = () => {\n    const [movies, setMovies] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState(null);\n    const [page, setPage] = useState(1);\n\n    const [searchParams, setSearchParams] = useSearchParams();\n    const searchQuery = searchParams.get('searchQuery');\n    const location = useLocation();\n\n    useEffect(() => {\n        const getMovies = async () => {\n            try {\n                setIsLoading(true);\n                const data = await fetchMovies(searchQuery, page);\n                if (data.length === 0) {\n                    Notify.failure(\"Sorry! No movie was found!\");\n                } else setMovies(movies => [...movies, ...data]);   \n            } catch (error) {\n                setError(error);\n            } finally {\n                setIsLoading(false);\n            }\n        }\n        if (searchQuery) {\n            getMovies();\n        } \n    }, [searchQuery, page]);\n\n    const onSearch = value => {\n        setSearchParams({ searchQuery: value });\n        setPage(1);\n        setMovies([]);\n    }\n\n    const SearchResults = () => {\n        return (\n            <ul>\n                {movies.map(movie => {\n                    return (\n                        <li key={movie.id} className={css.movie}>\n                            <Link to={`/movies/${movie.id}`}\n                                state={{ from: location }}>\n                                {movie.title} |&nbsp;  \n                                {movie.release_date?.split('-')[0] || 'No data'}\n                                </Link>\n                        </li>\n                    )\n                })}\n            </ul>\n        )\n    }\n\n    const isMovies = Boolean(movies.length);\n\n    return (\n        <main>\n            <SearchForm onSubmit={onSearch} />\n            {isLoading && <Loader />}\n            {error && Notify.failure('Please try again later!')}\n            {isMovies && SearchResults()}\n        </main>\n    )\n}\n\nexport default MoviesPage;","import axios from \"axios\";\n\nconst API_KEY = '28318b77967fcb148715c1c7fa524b54';\nconst SEARCH_URL = 'https://api.themoviedb.org/3/search/movie';\nconst TRENDING_URL = 'https://api.themoviedb.org/3/trending/movie/day';\nconst MOVIE_ID_URL = 'https://api.themoviedb.org/3/movie/';\n\nexport async function fetchTrendingMovies(page) {\n  try {\n    const { data } = await axios.get(\n      `${TRENDING_URL}?api_key=${API_KEY}&page=${page}`\n    );\n        return data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function fetchMovies(query, page) {\n  try {\n    const { data } = await axios.get(\n      `${SEARCH_URL}?api_key=${API_KEY}&query=${query}&page=${page}&language=en-US&include_adult=false`\n    );\n        return data.results;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function fetchMoviesByID(id) {\n  try {\n    const { data } = await axios.get(\n      `${MOVIE_ID_URL}${id}?api_key=${API_KEY}&language=en-US`\n    );\n        return data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function fetchTrailer(id) {\n  try {\n    const { data } = await axios.get(\n      `${MOVIE_ID_URL}${id}/videos?api_key=${API_KEY}&language=en-US`\n    );\n        return data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function fetchReviews(id) {\n    try {\n    const { data } = await axios.get(\n      `${MOVIE_ID_URL}${id}/reviews?api_key=${API_KEY}&language=en-US`\n        );\n        return data;\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport async function fetchCast(id) {\n    try {\n    const { data } = await axios.get(\n      `${MOVIE_ID_URL}${id}/credits?api_key=${API_KEY}&language=en-US`\n        );\n        return data;\n    } catch (error) {\n        console.log(error);\n    }\n}"],"names":["Loader","className","css","strokeColor","strokeWidth","animationDuration","width","visible","onSubmit","useState","query","setQuery","event","preventDefault","trim","Notify","name","type","autoComplete","autoFocus","placeholder","onChange","value","currentTarget","size","movies","setMovies","isLoading","setIsLoading","error","setError","page","setPage","useSearchParams","searchParams","setSearchParams","searchQuery","get","location","useLocation","useEffect","getMovies","fetchMovies","data","length","isMovies","Boolean","map","movie","to","id","state","from","title","release_date","split","API_KEY","SEARCH_URL","TRENDING_URL","MOVIE_ID_URL","fetchTrendingMovies","axios","console","log","results","fetchMoviesByID","fetchReviews","fetchCast"],"sourceRoot":""}